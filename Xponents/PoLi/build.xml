<?xml version="1.0"?>

<project name="PoLi" default="build">

  <property name="version" value="1.1"/>

    <!--
    
      XPonents Common tasks and properties.
    
    -->
    <import file="${basedir}/../xponents-include.xml"/>
    
    <property name="build" value = "${basedir}/build" />
    <!-- clean up from last build -->
    <target name="clean" depends ="clean.javadoc,cleanDependencies">
        <delete dir="${build}" />          
    </target>

    <target name="setup" >
        <mkdir dir="${build}" />
        <mkdir dir="${basedir}/doc/javadoc" />
    </target>

    <target name="clean.javadoc">
        <delete dir="${basedir}/doc/javadoc" />          
    </target>
	
    <!-- remove copied dependencies -->
    <target name="cleanDependencies">
        <delete file="${basedir}/lib/opensextant-commons.jar" />
        <delete file="${basedir}/lib/flexpat-1.3.jar" />
    </target>

    <target name="dependencies" depends="update" >
        <copy todir="${basedir}/lib" file="${commons_jar.location}" />
        <copy todir="${basedir}/lib" file="${flexpat_jar.location}" />
    </target>
        
    <path id="compile.classpath">
        <fileset dir="${basedir}/lib" includes="**/*.jar" />
    </path>

    <target name="build" depends="jar" />
    
    <!--
    
    PoLi tasks and properties.
    
    -->
	
  <target name="compile" depends="setup,dependencies"
    description="Compiles PoLi package.">
    <javac srcdir="${basedir}/src/main/java"
      destdir="${build}"
      classpathref="compile.classpath"
      debug="yes"
      deprecation="yes"
      encoding="utf-8"
      includeantruntime='true' >
      <compilerarg value="-Xlint:unchecked" />
      <include name="org/mitre/opensextant/poli/**"/>
    </javac>
    <jar jarfile="build/poli-${version}.jar" basedir="${build}"  includes="org/**" />
  </target>

  <target name="jar" depends="compile">
    <jar jarfile="build/poli-${version}.jar" basedir="${build}"  includes="org/**" />
  </target>

</project>
