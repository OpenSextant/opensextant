/* 
 Promotes Lookup types to typed annotation
 */


Phase:	LookupPromotion
Input:	Token Lookup
Options: control = all


Rule: Promote
(
	{Lookup}
)
:look
-->
{
	gate.AnnotationSet lookSet = (gate.AnnotationSet)bindings.get("look");
	gate.Annotation look = (gate.Annotation)lookSet.iterator().next();
	gate.FeatureMap lookFeatures = look.getFeatures();
	Node startNode = lookSet.firstNode(); 
	Node endNode   = lookSet.lastNode();
	
	String phraseString = null;
	try{
	 phraseString  = doc.getContent().getContent(startNode.getOffset(), endNode.getOffset()).toString();
	}catch(InvalidOffsetException e) {
		
	}
	
	if(phraseString != null){
		lookFeatures.put("string",phraseString);
	}
	
	
	String major = (String)lookFeatures.get("majorType");
	String minor = (String)lookFeatures.get("minorType");
	
	lookFeatures.remove("majorType");
	lookFeatures.remove("minorType");
	
	if(minor != null){
	lookFeatures.put("type",minor);
	}
	outputAS.add(startNode, endNode, major,lookFeatures);

	
}
