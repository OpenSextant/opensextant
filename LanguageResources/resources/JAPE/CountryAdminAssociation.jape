/** 
 Copyright 2009-2013 The MITRE Corporation.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.


 * **************************************************************************
 *                          NOTICE
 * This software was produced for the U. S. Government under Contract No.
 * W15P7T-12-C-F600, and is subject to the Rights in Noncommercial Computer
 * Software and Noncommercial Computer Software Documentation Clause
 * 252.227-7014 (JUN 1995)
 *
 * (c) 2012 The MITRE Corporation. All Rights Reserved.
 * **************************************************************************
**/

Imports: {
import org.mitre.opensextant.placedata.PlaceCandidate;
}

Phase: CountryAdminAssociation
Input: Token  Lookup placecandidate FeatureType Country Admin1 CardinalDirection
Options: control = all

// Patterns to look for
//	Place,Country
//	Place,Admin1,Country
// 	Admin1,Country
// 	Place,Admin1
//  Country


// Country
Rule:PCisCountry
(
	({placecandidate,Country}):pc
)
:whole
-->
{
	gate.AnnotationSet pcSet = bindings.get("pc");
	gate.Annotation pc = pcSet.iterator().next();
	
	gate.FeatureMap pcFeatures = pc.getFeatures();
	PlaceCandidate pcObjPlace = (PlaceCandidate) pcFeatures.get("placeCandidate");

	gate.AnnotationSet cntrySet = inputAS.get("Country",pc.getStartNode().getOffset(),pc.getEndNode().getOffset());
	
	
	for( gate.Annotation cntry : cntrySet){
	// get the country code from the Country annotation
	if(cntry != null){
	 gate.FeatureMap cntryFeatures = cntry.getFeatures();
	 String countryCode = (String) cntryFeatures.get("countryCode");

	 // add the country as evidence to the places's PC
	 pcObjPlace.addCountryEvidence(ruleName(), 1.0,countryCode);
	}
	}
}

// Admin1
Rule:PCisAdmin1
(
	({placecandidate,Admin1}):pc
)
:whole
-->
{
	gate.AnnotationSet pcSet = bindings.get("pc");
	gate.Annotation pc = pcSet.iterator().next();
	
	gate.FeatureMap pcFeatures = pc.getFeatures();
	PlaceCandidate pcObjPlace = (PlaceCandidate) pcFeatures.get("placeCandidate");

	gate.AnnotationSet adminSet = inputAS.get("Admin1",pc.getStartNode().getOffset(),pc.getEndNode().getOffset());
	
	
	for(gate.Annotation admin : adminSet){
	// get the country code and admin code from the Admin annotation
	if(admin != null){
	 gate.FeatureMap adminFeatures = admin.getFeatures();
	 String countryCode = (String) adminFeatures.get("countryCode");
	 String adminCode = (String) adminFeatures.get("adm1code");

	 // add the country as evidence to the places's PC
	 pcObjPlace.addAdmin1Evidence(ruleName(), 0.1,adminCode,countryCode);
	 
	}
	}
}




// Place,Country
Rule:PCWithCountry
(
	({placecandidate}):pc ({Token.string == ","})?:comma ({Country}):cntry
)
:whole
-->
{
	gate.AnnotationSet pcSet = bindings.get("pc");
	gate.Annotation pc = pcSet.iterator().next();
	
	gate.FeatureMap pcFeatures = pc.getFeatures();
	PlaceCandidate pcObjPlace = (PlaceCandidate) pcFeatures.get("placeCandidate");

	gate.AnnotationSet cntrySet = bindings.get("cntry");
	gate.Annotation cntry = cntrySet.iterator().next();
	
	gate.AnnotationSet cSet = bindings.get("comma");
	
	// get the country code from the Country annotation
	gate.FeatureMap cntryFeatures = cntry.getFeatures();
	String countryCode = (String) cntryFeatures.get("countryCode");

	// add the country as evidence to the places's PC
	// but only if cc is consistent with one of the places
	if(pcObjPlace.possibleCountry(countryCode)){
	  pcObjPlace.addCountryEvidence(ruleName(), 1.0,countryCode);
	  pcObjPlace.addRuleAndConfidence(ruleName(), 1.0 );
	}
}

// Place in Country
Rule:PCInCountry
(
	({placecandidate}):pc {Token.string == "in"} ({CardinalDirection})? ({Country}):cntry
)
:whole
-->
{
	gate.AnnotationSet pcSet = bindings.get("pc");
	gate.Annotation pc = pcSet.iterator().next();
	
	gate.FeatureMap pcFeatures = pc.getFeatures();
	PlaceCandidate pcObjPlace = (PlaceCandidate) pcFeatures.get("placeCandidate");

	gate.AnnotationSet cntrySet = bindings.get("cntry");
	gate.Annotation cntry = cntrySet.iterator().next();
	
	
	
	// get the country code from the Country annotation
	gate.FeatureMap cntryFeatures = cntry.getFeatures();
	String countryCode = (String) cntryFeatures.get("countryCode");

	// add the country as evidence to the places's PC
	// but only if cc is consistent with one of the places
	if(pcObjPlace.possibleCountry(countryCode)){
	  pcObjPlace.addCountryEvidence(ruleName(), 1.0,countryCode);
	  pcObjPlace.addRuleAndConfidence(ruleName(), 1.0 );
	}
	
}


// Place in Admin
Rule:PCInAdmin1
(
	({placecandidate}):pc {Token.string == "in"} ({CardinalDirection})? ({Admin1}):adm
)
:whole
-->
{
	gate.AnnotationSet pcSet = bindings.get("pc");
	gate.Annotation pc = pcSet.iterator().next();
	
	gate.FeatureMap pcFeatures = pc.getFeatures();
	PlaceCandidate pcObjPlace = (PlaceCandidate) pcFeatures.get("placeCandidate");

	gate.AnnotationSet admSet = bindings.get("adm");
	gate.Annotation adm = admSet.iterator().next();
	
	// get the country code from the Admin1 annotation
	gate.FeatureMap admFeatures = adm.getFeatures();
	String countryCode = (String) admFeatures.get("countryCode");

	// add the country as evidence to the places's PC
	// but only if cc is consistent with one of the places
	if(pcObjPlace.possibleCountry(countryCode)){
	  pcObjPlace.addCountryEvidence(ruleName(), 1.0,countryCode);
	  pcObjPlace.addRuleAndConfidence(ruleName(), 1.0 );
	}
	
}


// Place,Admin1,Country
Rule:PCWithAdminAndCountry
(
	({placecandidate}):pc ({Token.string == ","})? ({Admin1}):adm1 ({Token.string == ","})?({Country}):cntry
)
:whole
-->
{
	// get the place annotation
	gate.AnnotationSet pcSet = bindings.get("pc");
	gate.Annotation pc = pcSet.iterator().next();
	
	// get the adm1 annotation
	gate.AnnotationSet adm1Set = bindings.get("adm1");
	gate.Annotation adm1 = adm1Set.iterator().next();
	
	// get the Country annotation
	gate.AnnotationSet cntrySet = bindings.get("cntry");
	gate.Annotation cntry = cntrySet.iterator().next();
	
	// get the features from each annotation
	gate.FeatureMap pcFeatures = pc.getFeatures();
	gate.FeatureMap adm1Features = adm1.getFeatures();
	gate.FeatureMap cntryFeatures = cntry.getFeatures();
	
	// get the PlaceCandidate object from each feature set
	PlaceCandidate pcObjPlace = (PlaceCandidate) pcFeatures.get("placeCandidate");
	PlaceCandidate pcObjAdm1  = (PlaceCandidate) adm1Features.get("placeCandidate");
	PlaceCandidate pcObjCntry = (PlaceCandidate) cntryFeatures.get("placeCandidate");
		

	// get the country codes from the Country and Admin annotations
	String countryCodeCntry = (String) cntryFeatures.get("countryCode");
	String countryCodeAdmin1 = (String) adm1Features.get("countryCode");

	// get the admin1 code from the Admin1 annotation
	String adm1Code = (String) adm1Features.get("adm1code");

	// now add the evidence
	// but only if adm1code is consistent with one of the places
	if(pcObjPlace.possibleAdmin(adm1Code,countryCodeCntry)){
	
		pcObjAdm1.addAdmin1Evidence(ruleName(), 1.0,adm1Code,countryCodeCntry);
		pcObjPlace.addAdmin1Evidence(ruleName(), 1.0,adm1Code,countryCodeCntry);
	    pcObjPlace.addAdmin1Evidence(ruleName(), 1.0,countryCodeCntry,adm1Code);
	    
	  	// add some confidence to the place,admin and country
		pcObjPlace.addRuleAndConfidence(ruleName(), 1.0 );
		pcObjAdm1.addRuleAndConfidence(ruleName(), 1.0 );
		pcObjCntry.addRuleAndConfidence(ruleName(), 1.0 );	
	}else{// negative evidence
		// add the admin1 and country negative evidence to the place
		pcObjPlace.addAdmin1Evidence(ruleName(), -1.0,adm1Code,countryCodeCntry);
	}

	
}

// Admin1,Country
Rule:AdminAndCountry
(
	({Admin1}):adm1 ({Token.string == ","})? ({Country}):cntry
)
:whole
-->
{
	// get the adm1 annotation
	gate.AnnotationSet adm1Set = bindings.get("adm1");
	gate.Annotation adm1 = adm1Set.iterator().next();
	
	// get the Country annotation
	gate.AnnotationSet cntrySet = bindings.get("cntry");
	gate.Annotation cntry = cntrySet.iterator().next();
	

	// get the features from each annotation
	gate.FeatureMap adm1Features = adm1.getFeatures();
	gate.FeatureMap cntryFeatures = cntry.getFeatures();
	
	// get the PlaceCandidate object from each feature set
	PlaceCandidate pcObjAdm1  = (PlaceCandidate) adm1Features.get("placeCandidate");
	PlaceCandidate pcObjCntry = (PlaceCandidate) cntryFeatures.get("placeCandidate");
		
	// get the country codes from the Country and Admin annotations
	String countryCodeCntry = (String) cntryFeatures.get("countryCode");
	String countryCodeAdmin1 = (String) adm1Features.get("countryCode");

	 // get the admin1 code from the Admin1 annotation
	String adm1Code = (String) adm1Features.get("adm1code");


	// only use as evidence if the Admin1 is in Country
	if(countryCodeCntry.equals(countryCodeAdmin1)){
		// now add the evidence

		// add the country and adm1 as evidence to the admin1
		pcObjAdm1.addAdmin1Evidence(ruleName(), 1.0,adm1Code,countryCodeCntry);
	
		// add some confidence to the admin and country
		pcObjAdm1.addRuleAndConfidence(ruleName(), 1.0 );
		pcObjCntry.addRuleAndConfidence(ruleName(), 1.0 );
	}else{
	   // now add the (negative) evidence
	  		
		// add the country and adm1 as negative evidence to the admin1
		pcObjAdm1.addAdmin1Evidence(ruleName(), -1.0,adm1Code,countryCodeAdmin1);
		
	}

	
}
// Place,Admin1
Rule:PCWithAdmin
(
	({placecandidate}):pc ({Token.string == ","})?:comma ({Admin1}):adm1
)
:whole
-->
{
	// get the place annotation
	gate.AnnotationSet pcSet = bindings.get("pc");
	gate.Annotation pc = pcSet.iterator().next();
	
	// get the adm1 annotation
	gate.AnnotationSet adm1Set = bindings.get("adm1");
	gate.Annotation adm1 = adm1Set.iterator().next();
	
	// get the features from each annotation
	gate.FeatureMap pcFeatures = pc.getFeatures();
	gate.FeatureMap adm1Features = adm1.getFeatures();
	
	gate.AnnotationSet cSet = bindings.get("comma");
	
	// get the PlaceCandidate object from each feature set
	PlaceCandidate pcObjPlace = (PlaceCandidate) pcFeatures.get("placeCandidate");
	PlaceCandidate pcObjAdm1  = (PlaceCandidate) adm1Features.get("placeCandidate");
		

	// get the country code from the Admin1 annotation
	String countryCode = (String) adm1Features.get("countryCode");

	// get the admin1 code from the Admin1 annotation
	String adm1Code = (String) adm1Features.get("adm1code");

	// now add the evidence
	// add the country as evidence to the places's PC
	// but only if adm1code is consistent with one of the places
	if(pcObjPlace.possibleAdmin(adm1Code,countryCode)){
	  pcObjPlace.addAdmin1Evidence(ruleName(), 1.0,countryCode,adm1Code);
	  pcObjPlace.addRuleAndConfidence(ruleName(), 1.0 );
	}
}


