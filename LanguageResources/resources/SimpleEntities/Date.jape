/*

  This phase finds Dates and Time references

*/

Imports: {
import static gate.Utils.*;
}
 

Phase:	Dates
Input:	Token noun_common
Options: control = appelt

MACRO: MONTH_NAME  //Jan January Jan. ....
(
 {noun_common.hierarchy == "Time.month"}
)

MACRO: DAY_NUMBER  //13-31 unambigous day numbers
(
 {Token.string ==~ "1[3-9]|2[0-9]| 3[0-1]"} 
)

MACRO: MONTH_OR_DAY_NUMBER  //1-12 including leading zeros, could be day or month
(
 {Token.string ==~ "(0)?[1-9]|1[0-2]"} 
)

MACRO: ALL_DAY_OR_MONTH_NUMEBERS  // 1-31  including leading zeros, could be day or month
(
 DAY_NUMBER | MONTH_OR_DAY_NUMBER
)


MACRO: YEAR_2DIGIT  //00-99
(
 {Token.string ==~ "[0-9][0-9]"}
)

MACRO: YEAR_4DIGIT  //1900 - 2999
(
 {Token.string ==~ "[1-2][0-9]{3}"}
)

MACRO: DELIM  
(
 {Token.string ==~ "[-/]"}
)



// -------------The rules -------------

// mil date time group
Rule: DTG
(
 {Token.string ==~"(19|20)[0-9]{6}"}
 {Token.string == "T"}
 {Token.string ==~"[0-9]{2}"}
 {Token.string == ":"}
 {Token.string ==~"[0-9]{2}"}
 {Token.string == "Z"}
)
:whole
-->
{
	gate.AnnotationSet dtgSet = (gate.AnnotationSet)bindings.get("whole");

	gate.FeatureMap tempFeatures = Factory.newFeatureMap();
	tempFeatures.put("rule","DTG");
	String tmpDTG = gate.Utils.stringFor(doc,dtgSet);
	tempFeatures.put("string",tmpDTG);
	
	String day   = tmpDTG.substring(6,8);
	String month = tmpDTG.substring(4,6);
	String year  = tmpDTG.substring(0,4);
	
	tempFeatures.put("day",day);
	tempFeatures.put("month",month);
	tempFeatures.put("year",year);
	tempFeatures.put("hierarchy","Time.date");
	tempFeatures.put("simpleEntityType","date");
	
	outputAS.add(dtgSet.firstNode(), dtgSet.lastNode(), "Date",tempFeatures);
}


// another mil date time group
Rule: DTG2
(
 ({Token.string ==~"[0-9]{6}"}):numBlock
 {Token.string == "Z"}
 ({noun_common.hierarchy == "Time.month"}):month 
 ({Token.string ==~"[0-9]{2}"}):year
)
:whole
-->
{
	gate.AnnotationSet wholeSet = (gate.AnnotationSet)bindings.get("whole");
	gate.AnnotationSet numSet = (gate.AnnotationSet)bindings.get("numBlock");
	gate.AnnotationSet monthSet = (gate.AnnotationSet)bindings.get("month");
	gate.AnnotationSet yearSet = (gate.AnnotationSet)bindings.get("year");

	String wholeString = gate.Utils.stringFor(doc,wholeSet);
	gate.FeatureMap tempFeatures = Factory.newFeatureMap();
	

	gate.Annotation monthAnno = (gate.Annotation)monthSet.iterator().next();
	String month = monthAnno.getFeatures().get("number").toString();		
	
	String numString = gate.Utils.stringFor(doc,numSet);
	String yearString = gate.Utils.stringFor(doc,yearSet);
	
	String day = numString.substring(0,2);
	String hour = numString.substring(2,4);
	String min = numString.substring(4,6);
	
	tempFeatures.put("day",day);
	tempFeatures.put("month",month);
	tempFeatures.put("year",yearString);
	tempFeatures.put("hour",hour);
	tempFeatures.put("minute",min);
	
	
	tempFeatures.put("string",wholeString);
	tempFeatures.put("hierarchy","Time.dateTime");
	tempFeatures.put("simpleEntityType","date");
	
	outputAS.add(wholeSet.firstNode(), wholeSet.lastNode(), "Date",tempFeatures);
}




// 1234Z  12:34L
Rule: MilTime
(
 (
  {Token.string ==~ "[0-9]{4}"}
    |
  ({Token.string ==~ "[0-9]{2}"}{Token.string == ":"}{Token.string ==~ "[0-9]{2}"})
  )
  {Token.string ==~ "[LZ]|local|Local|LOCAL|zulu|Zulu|ZULU"}
)
:sent
-->
{
	gate.AnnotationSet sentSet = (gate.AnnotationSet)bindings.get("sent");
	Node sentStartNode = sentSet.firstNode(); 
	Node sentEndNode   = sentSet.lastNode();
 
	 gate.FeatureMap tempFeatures = Factory.newFeatureMap();
	 tempFeatures.put("rule","MilTime");
	 tempFeatures.put("string", stringFor(doc,sentSet));
	 tempFeatures.put("hierarchy","Time.time");
	 tempFeatures.put("simpleEntityType","time");
	 
	outputAS.add(sentStartNode, sentEndNode, "Time",tempFeatures);	
}


// 19950126
Rule: AllNumeric
(
  {Token.kind == "number", Token.length == 8} 
)
:whole
-->
{
	gate.AnnotationSet wholeSet = (gate.AnnotationSet)bindings.get("whole");
	String datePhrase = gate.Utils.stringFor(doc,wholeSet);
	
	gate.FeatureMap tempFeatures = Factory.newFeatureMap();
	tempFeatures.put("rule","AllNumeric");
	tempFeatures.put("string",datePhrase);
	
	String yearString =  datePhrase.substring(0,4);
	String monthString = datePhrase.substring(4,6);	
	String dayString =   datePhrase.substring(6,8);
	
	 int year = Integer.parseInt(yearString);
	 int month = Integer.parseInt(monthString);
	 int day = Integer.parseInt(dayString);
	 
	 if(year > 1900 && year < 3000 && month < 13 && day < 31)
	{
	tempFeatures.put("day",day);
	tempFeatures.put("month",month);
	tempFeatures.put("year",year);
	tempFeatures.put("hierarchy","Time.date");
	tempFeatures.put("simpleEntityType","date");

	outputAS.add(wholeSet.firstNode(), wholeSet.lastNode(), "Date",tempFeatures);
	}
}





// 21 Jan 1985
Rule: Date1
(
 (ALL_DAY_OR_MONTH_NUMEBERS):d (MONTH_NAME):m (YEAR_4DIGIT):y
)
:whole
-->
{
	gate.AnnotationSet wholeSet = (gate.AnnotationSet)bindings.get("whole");
	String datePhrase = gate.Utils.stringFor(doc,wholeSet);
	
	gate.AnnotationSet dSet = (gate.AnnotationSet)bindings.get("d");
	gate.Annotation d = (gate.Annotation)dSet.iterator().next();
	
	gate.AnnotationSet mSet = (gate.AnnotationSet)bindings.get("m");
	gate.Annotation m = (gate.Annotation)mSet.iterator().next();
	
	gate.AnnotationSet ySet = (gate.AnnotationSet)bindings.get("y");
	gate.Annotation y = (gate.Annotation)ySet.iterator().next();


	gate.FeatureMap tempFeatures = Factory.newFeatureMap();
	tempFeatures.put("rule","Date1");
	tempFeatures.put("string",datePhrase);
	
	String day = gate.Utils.stringFor(doc,d);
	if(day.length() == 1) { day = "0" + day;} 
	String month = m.getFeatures().get("number").toString();	
	
	String year = gate.Utils.stringFor(doc,y);
	
	tempFeatures.put("day",day);
	tempFeatures.put("month",month);
	tempFeatures.put("year",year);
	tempFeatures.put("hierarchy","Time.date");
	tempFeatures.put("simpleEntityType","date");

	outputAS.add(wholeSet.firstNode(), wholeSet.lastNode(), "Date",tempFeatures);
}



// Jan 1985
Rule: Date2
(
 (MONTH_NAME):m (YEAR_4DIGIT):y
)
:whole
-->
{
	gate.AnnotationSet wholeSet = (gate.AnnotationSet)bindings.get("whole");
	String datePhrase = gate.Utils.stringFor(doc,wholeSet);
	
	
	gate.AnnotationSet mSet = (gate.AnnotationSet)bindings.get("m");
	gate.Annotation m = (gate.Annotation)mSet.iterator().next();
	
	gate.AnnotationSet ySet = (gate.AnnotationSet)bindings.get("y");
	gate.Annotation y = (gate.Annotation)ySet.iterator().next();


	gate.FeatureMap tempFeatures = Factory.newFeatureMap();
	tempFeatures.put("rule","Date2");
	tempFeatures.put("string",datePhrase);
	
	String day = "00";
	String month = m.getFeatures().get("number").toString();	
	String year = gate.Utils.stringFor(doc,y);
	
	tempFeatures.put("day",day);
	tempFeatures.put("month",month);
	tempFeatures.put("year",year);
	tempFeatures.put("hierarchy","Time.date");
	tempFeatures.put("simpleEntityType","date");
	outputAS.add(wholeSet.firstNode(), wholeSet.lastNode(), "Date",tempFeatures);
}


// 24 March
Rule: Date3
(
 ( ALL_DAY_OR_MONTH_NUMEBERS):d (MONTH_NAME):m 
)
:whole
-->
{
	gate.AnnotationSet wholeSet = (gate.AnnotationSet)bindings.get("whole");
	String datePhrase = gate.Utils.stringFor(doc,wholeSet);
	
	gate.AnnotationSet dSet = (gate.AnnotationSet)bindings.get("d");
	gate.Annotation d = (gate.Annotation)dSet.iterator().next();
	
	gate.AnnotationSet mSet = (gate.AnnotationSet)bindings.get("m");
	gate.Annotation m = (gate.Annotation)mSet.iterator().next();
	

	gate.FeatureMap tempFeatures = Factory.newFeatureMap();
	tempFeatures.put("rule","Date3");
	tempFeatures.put("string",datePhrase);
	
	String day = gate.Utils.stringFor(doc,d);
	if(day.length() == 1) { day = "0" + day;} 
	String month = m.getFeatures().get("number").toString();	
	
	String year = "0000";
	
	tempFeatures.put("day",day);
	tempFeatures.put("month",month);
	tempFeatures.put("year",year);
	tempFeatures.put("hierarchy","Time.date");
	tempFeatures.put("simpleEntityType","date");

	outputAS.add(wholeSet.firstNode(), wholeSet.lastNode(), "Date",tempFeatures);
}

// 21-JAN-1985 21/JAN/1985
Rule: Date4
(
 (ALL_DAY_OR_MONTH_NUMEBERS):d DELIM (MONTH_NAME):m DELIM (YEAR_4DIGIT):y
)
:whole
-->
{
	gate.AnnotationSet wholeSet = (gate.AnnotationSet)bindings.get("whole");
	String datePhrase = gate.Utils.stringFor(doc,wholeSet);
	
	gate.AnnotationSet dSet = (gate.AnnotationSet)bindings.get("d");
	gate.Annotation d = (gate.Annotation)dSet.iterator().next();
	
	gate.AnnotationSet mSet = (gate.AnnotationSet)bindings.get("m");
	gate.Annotation m = (gate.Annotation)mSet.iterator().next();
	
	gate.AnnotationSet ySet = (gate.AnnotationSet)bindings.get("y");
	gate.Annotation y = (gate.Annotation)ySet.iterator().next();


	gate.FeatureMap tempFeatures = Factory.newFeatureMap();
	tempFeatures.put("rule","Date1");
	tempFeatures.put("string",datePhrase);
	
	String day = gate.Utils.stringFor(doc,d);
	if(day.length() == 1) { day = "0" + day;} 
	String month = m.getFeatures().get("number").toString();	
	
	String year = gate.Utils.stringFor(doc,y);
	
	tempFeatures.put("day",day);
	tempFeatures.put("month",month);
	tempFeatures.put("year",year);
	tempFeatures.put("hierarchy","Time.date");
	tempFeatures.put("simpleEntityType","date");

	outputAS.add(wholeSet.firstNode(), wholeSet.lastNode(), "Date",tempFeatures);
}

// unambigous only
// 1985-02-26
Rule: Date4
(
  (YEAR_4DIGIT):y 	DELIM (MONTH_OR_DAY_NUMBER):m DELIM (DAY_NUMBER):d 
)
:whole
-->
{
	gate.AnnotationSet wholeSet = (gate.AnnotationSet)bindings.get("whole");
	String datePhrase = gate.Utils.stringFor(doc,wholeSet);
	
	gate.AnnotationSet dSet = (gate.AnnotationSet)bindings.get("d");
	gate.Annotation d = (gate.Annotation)dSet.iterator().next();
	
	gate.AnnotationSet mSet = (gate.AnnotationSet)bindings.get("m");
	gate.Annotation m = (gate.Annotation)mSet.iterator().next();
	
	gate.AnnotationSet ySet = (gate.AnnotationSet)bindings.get("y");
	gate.Annotation y = (gate.Annotation)ySet.iterator().next();


	gate.FeatureMap tempFeatures = Factory.newFeatureMap();
	tempFeatures.put("rule","Date4");
	tempFeatures.put("string",datePhrase);
	
	String day = gate.Utils.stringFor(doc,d);
	String month = gate.Utils.stringFor(doc,m);	
	String year = gate.Utils.stringFor(doc,y);
	
	tempFeatures.put("day",day);
	tempFeatures.put("month",month);
	tempFeatures.put("year",year);
	tempFeatures.put("hierarchy","Time.date");
	tempFeatures.put("simpleEntityType","date");

	outputAS.add(wholeSet.firstNode(), wholeSet.lastNode(), "Date",tempFeatures);
}


// unamabigous only
// 02-26-1985
Rule: Date5
(
  (MONTH_OR_DAY_NUMBER):m 	DELIM (DAY_NUMBER):d 	DELIM (YEAR_4DIGIT):y
)
:whole
-->
{
	gate.AnnotationSet wholeSet = (gate.AnnotationSet)bindings.get("whole");
	String datePhrase = gate.Utils.stringFor(doc,wholeSet);
	
	gate.AnnotationSet dSet = (gate.AnnotationSet)bindings.get("d");
	gate.Annotation d = (gate.Annotation)dSet.iterator().next();
	
	gate.AnnotationSet mSet = (gate.AnnotationSet)bindings.get("m");
	gate.Annotation m = (gate.Annotation)mSet.iterator().next();
	
	gate.AnnotationSet ySet = (gate.AnnotationSet)bindings.get("y");
	gate.Annotation y = (gate.Annotation)ySet.iterator().next();


	gate.FeatureMap tempFeatures = Factory.newFeatureMap();
	tempFeatures.put("rule","Date5");
	tempFeatures.put("string",datePhrase);
	
	String day = gate.Utils.stringFor(doc,d);
	String month = gate.Utils.stringFor(doc,m);	
	String year = gate.Utils.stringFor(doc,y);
	
	tempFeatures.put("day",day);
	tempFeatures.put("month",month);
	tempFeatures.put("year",year);
	tempFeatures.put("hierarchy","Time.date");
	tempFeatures.put("simpleEntityType","date");

	outputAS.add(wholeSet.firstNode(), wholeSet.lastNode(), "Date",tempFeatures);
}

// unamabigous only
// 26-02-1985
Rule: Date6
(
(DAY_NUMBER):d DELIM (MONTH_OR_DAY_NUMBER):m DELIM (YEAR_4DIGIT):y
)
:whole
-->
{
	gate.AnnotationSet wholeSet = (gate.AnnotationSet)bindings.get("whole");
	String datePhrase = gate.Utils.stringFor(doc,wholeSet);
	
	gate.AnnotationSet dSet = (gate.AnnotationSet)bindings.get("d");
	gate.Annotation d = (gate.Annotation)dSet.iterator().next();
	
	gate.AnnotationSet mSet = (gate.AnnotationSet)bindings.get("m");
	gate.Annotation m = (gate.Annotation)mSet.iterator().next();
	
	gate.AnnotationSet ySet = (gate.AnnotationSet)bindings.get("y");
	gate.Annotation y = (gate.Annotation)ySet.iterator().next();


	gate.FeatureMap tempFeatures = Factory.newFeatureMap();
	tempFeatures.put("rule","Date6");
	tempFeatures.put("string",datePhrase);
	
	String day = gate.Utils.stringFor(doc,d);
	String month = gate.Utils.stringFor(doc,m);	
	String year = gate.Utils.stringFor(doc,y);
	
	tempFeatures.put("day",day);
	tempFeatures.put("month",month);
	tempFeatures.put("year",year);
	tempFeatures.put("hierarchy","Time.date");
	tempFeatures.put("simpleEntityType","date");

	outputAS.add(wholeSet.firstNode(), wholeSet.lastNode(), "Date",tempFeatures);
}

// ambigous
// 02-02-1985
// assume day-month-year
Rule: Date7
(
(MONTH_OR_DAY_NUMBER):d DELIM (MONTH_OR_DAY_NUMBER):m DELIM (YEAR_4DIGIT):y
)
:whole
-->
{
	gate.AnnotationSet wholeSet = (gate.AnnotationSet)bindings.get("whole");
	String datePhrase = gate.Utils.stringFor(doc,wholeSet);
	
	gate.AnnotationSet dSet = (gate.AnnotationSet)bindings.get("d");
	gate.Annotation d = (gate.Annotation)dSet.iterator().next();
	
	gate.AnnotationSet mSet = (gate.AnnotationSet)bindings.get("m");
	gate.Annotation m = (gate.Annotation)mSet.iterator().next();
	
	gate.AnnotationSet ySet = (gate.AnnotationSet)bindings.get("y");
	gate.Annotation y = (gate.Annotation)ySet.iterator().next();


	gate.FeatureMap tempFeatures = Factory.newFeatureMap();
	tempFeatures.put("rule","Date6");
	tempFeatures.put("string",datePhrase);
	
	String day = gate.Utils.stringFor(doc,d);
	String month = gate.Utils.stringFor(doc,m);	
	String year = gate.Utils.stringFor(doc,y);
	
	tempFeatures.put("day",day);
	tempFeatures.put("month",month);
	tempFeatures.put("year",year);
	tempFeatures.put("hierarchy","Time.date");
	tempFeatures.put("simpleEntityType","date");

	outputAS.add(wholeSet.firstNode(), wholeSet.lastNode(), "Date",tempFeatures);
}

// ambigous
// 1985-02-02
// assume year-month-day
Rule: Date8
(
 (YEAR_4DIGIT):y DELIM (MONTH_OR_DAY_NUMBER):m DELIM (MONTH_OR_DAY_NUMBER):d 
)
:whole
-->
{
	gate.AnnotationSet wholeSet = (gate.AnnotationSet)bindings.get("whole");
	String datePhrase = gate.Utils.stringFor(doc,wholeSet);
	
	gate.AnnotationSet dSet = (gate.AnnotationSet)bindings.get("d");
	gate.Annotation d = (gate.Annotation)dSet.iterator().next();
	
	gate.AnnotationSet mSet = (gate.AnnotationSet)bindings.get("m");
	gate.Annotation m = (gate.Annotation)mSet.iterator().next();
	
	gate.AnnotationSet ySet = (gate.AnnotationSet)bindings.get("y");
	gate.Annotation y = (gate.Annotation)ySet.iterator().next();


	gate.FeatureMap tempFeatures = Factory.newFeatureMap();
	tempFeatures.put("rule","Date6");
	tempFeatures.put("string",datePhrase);
	
	String day = gate.Utils.stringFor(doc,d);
	String month = gate.Utils.stringFor(doc,m);	
	String year = gate.Utils.stringFor(doc,y);
	
	tempFeatures.put("day",day);
	tempFeatures.put("month",month);
	tempFeatures.put("year",year);
	tempFeatures.put("hierarchy","Time.date");
	tempFeatures.put("simpleEntityType","date");

	outputAS.add(wholeSet.firstNode(), wholeSet.lastNode(), "Date",tempFeatures);
}

