/* 
 Promotes all (appropriate) Simple entity types into a single "Entity" entity with attribute of EntityType
 Used to insulate following stages from the growing list of entities
 */

Imports: {
import static gate.Utils.*;
import gov.ic.nga.kweb.gate.naivetagger.GeoBean;
}

Phase:	SimpleEntityPromotion
Input:	Token ClassMark geocoord URL EMail WebSite IPAddress Identifier Time Date Measurement
		Money place
Options: control = all

Rule: Promote
(
	{ClassMark}	|
	{geocoord}	|
	{URL}		|
	{WebSite}	|
	{EMail}		|
	{IPAddress}	|	
	{Time}		|
	{Date}		|
	{Money}		|
	{Measurement}
	// | {Identifier}
)
:entity
-->
{
	gate.AnnotationSet entitySet = (gate.AnnotationSet)bindings.get("entity");
	gate.Annotation entity = (gate.Annotation)entitySet.iterator().next();
	gate.FeatureMap entityFeatures = entity.getFeatures();
	Node startNode = entitySet.firstNode(); 
	Node endNode   = entitySet.lastNode();
	
	String phrase = stringFor(doc,entitySet).replaceAll("\\s"," ");
	entityFeatures.put("string",phrase);
	entityFeatures.put("entityType", entity.getType());
	entityFeatures.put("entityCategory", "SimpleEntity");
	entityFeatures.put("corePhrase",phrase);
	entityFeatures.put("modifierPhrase","");
	entityFeatures.put("commonOrProper","common");
	
	
	
	outputAS.add(startNode, endNode, "Entity",entityFeatures);
}


// promotes a geoTASER-found "place" to an entity
Rule: PlacePromote
(
  {place}
)
:entity
-->
{
	gate.AnnotationSet entitySet = (gate.AnnotationSet)bindings.get("entity");
	gate.Annotation entity = (gate.Annotation)entitySet.iterator().next();
	gate.FeatureMap placeFeatures = entity.getFeatures();
	
	gate.FeatureMap entityFeatures = gate.Factory.newFeatureMap();

	//entityFeatures.putAll(entity.getFeatures());
	Node startNode = entitySet.firstNode(); 
	Node endNode   = entitySet.lastNode();
	
	String phrase = stringFor(doc,entitySet).replaceAll("\\s"," ");
	entityFeatures.put("string",phrase);
	entityFeatures.put("entityType", entity.getType());
	entityFeatures.put("entityCategory", "SimpleEntity");
	entityFeatures.put("corePhrase",phrase);
	entityFeatures.put("modifierPhrase","");
	entityFeatures.put("commonOrProper","proper");
	entityFeatures.put("hierarchy","Geo.placename");
	entityFeatures.put("simpleEntityType","placename");


	// copy over all relevant features from place annotation
	 // get the list of GeoBeans
	List<GeoBean> beans = (List<GeoBean>)placeFeatures.get("gazetteerHits");
	 // get the top ranked bean
	GeoBean topBean = beans.get(0);

	entityFeatures.put("latitude", topBean.getLatitude());
	entityFeatures.put("longitude", topBean.getLongitude());
	entityFeatures.put("gazetteerName", topBean.getPlaceName());
	entityFeatures.put("countryCode", topBean.getCountryCode());
	entityFeatures.put("featureType", topBean.getFeatureType());
	

	outputAS.add(startNode, endNode, "Entity",entityFeatures);
}