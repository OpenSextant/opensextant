/*

  This phase finds  numerical phrases

*/

Imports: {
import static gate.Utils.*;
}
 

Phase:	Numbers
Input:	Token NumberWord
Options: control = appelt


Macro: NUM_TOKEN
(	
	{Token.string ==~ "[0-9]+"}
)

Macro: NUM_TOKEN3
(	
	{Token.string ==~ "[0-9]{3}"}
)


Macro: BASIC_NUMBER
(	
   NUM_TOKEN ({Token.string == ","} NUM_TOKEN3)[0,3] ({Token.string == "."} NUM_TOKEN)?
)



// -------------The rules -------------

// 100 , 100.01
Rule:BasicNumber
(
  BASIC_NUMBER
)
:num
-->
{
	gate.AnnotationSet numSet = (gate.AnnotationSet)bindings.get("num");
	Node numStartNode = numSet.firstNode(); 
	Node numEndNode   = numSet.lastNode();
 
	 gate.FeatureMap tempFeatures = Factory.newFeatureMap();
	 tempFeatures.put("rule",ruleName());
	 tempFeatures.put("string", stringFor(doc,numSet));

	outputAS.add(numStartNode, numEndNode, "Number",tempFeatures);
}

// 17.2 million 
Rule:DigitsAndWord
(
  BASIC_NUMBER ({Token.string ==~ "-"})? {NumberWord}
)
:num
-->
{
	gate.AnnotationSet numSet = (gate.AnnotationSet)bindings.get("num");
	Node numStartNode = numSet.firstNode(); 
	Node numEndNode   = numSet.lastNode();
 
	 gate.FeatureMap tempFeatures = Factory.newFeatureMap();
	 tempFeatures.put("rule",ruleName());
	 tempFeatures.put("string", stringFor(doc,numSet));

	outputAS.add(numStartNode, numEndNode, "Number",tempFeatures);
}

// three million,  
Rule:NumberWords
(
  {NumberWord} ({Token.string ==~ "-"})? ({NumberWord})[0,3]
)
:num
-->
{
	gate.AnnotationSet numSet = (gate.AnnotationSet)bindings.get("num");
	Node numStartNode = numSet.firstNode(); 
	Node numEndNode   = numSet.lastNode();
 
	 gate.FeatureMap tempFeatures = Factory.newFeatureMap();
	 tempFeatures.put("rule",ruleName());
	 tempFeatures.put("string", stringFor(doc,numSet));

	outputAS.add(numStartNode, numEndNode, "Number",tempFeatures);
}

// a hundred and forty  
Rule:NumberAndNumber
(
  {NumberWord} {Token.string ==~ "and|And|AND"} {NumberWord}
)
:num
-->
{
	gate.AnnotationSet numSet = (gate.AnnotationSet)bindings.get("num");
	Node numStartNode = numSet.firstNode(); 
	Node numEndNode   = numSet.lastNode();
 
	 gate.FeatureMap tempFeatures = Factory.newFeatureMap();
	 tempFeatures.put("rule",ruleName());
	 tempFeatures.put("string", stringFor(doc,numSet));

	outputAS.add(numStartNode, numEndNode, "Number",tempFeatures);
}

// a hundreds of thousands  
Rule:NumberOfNumber
(
  {NumberWord} {Token.string ==~ "of|Of|OF"} {NumberWord}
)
:num
-->
{
	gate.AnnotationSet numSet = (gate.AnnotationSet)bindings.get("num");
	Node numStartNode = numSet.firstNode(); 
	Node numEndNode   = numSet.lastNode();
 
	 gate.FeatureMap tempFeatures = Factory.newFeatureMap();
	 tempFeatures.put("rule",ruleName());
	 tempFeatures.put("string", stringFor(doc,numSet));

	outputAS.add(numStartNode, numEndNode, "Number",tempFeatures);
}
